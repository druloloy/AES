{"mappings":"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","sources":["node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","scripts/app.js"],"sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","class AES{\n    constructor( plainText = '', options = {\n        key : '' | crypto.randomBytes(32),\n        process : 'encrypt' | 'decrypt',\n        algorithm : 'aes-256-gcm' | 'aes-192-gcm' | 'aes-128-gcm',\n        vector: Buffer\n    }){\n        this.key = options.key;\n        this.plainText = plainText;\n        this.process = options.process;\n        this.algorithm = options.algorithm;\n        this.vector = options.vector;\n\n        switch (this.process) {\n            case 'encrypt':\n                this.#encrypt();\n                break;\n        \n            case 'decrypt':\n                this.#decrypt();\n                break;\n            default:\n                throw new Error('process must be encrypt or decrypt');  \n        }\n    }\n\n    #processedText = '';\n    \n    #encrypt(){\n        const cipher = crypto.createCipheriv(this.algorithm, this.key, this.vector);\n        let encrypted = cipher.update(this.plainText, 'utf8', 'hex');\n        encrypted += cipher.final('hex');\n        this.#processedText = encrypted;\n    }\n    #decrypt(){\n        const decipher = crypto.createCipheriv(this.algorithm, this.key, this.vector);\n        let decrypted = decipher.update(this.plainText, 'hex', 'utf8');\n        decrypted += decipher.final('utf8');\n        this.#processedText = decrypted;\n    }\n    getPlainText(){\n        return this.plainText;\n    }\n    getProcessedText(){\n        return this.#processedText;\n    }\n}\n\nconst KEY = Buffer.from('ae1b499c2a1a60224789468a80f4b5525ee235e9a423deee28dbb6fecd2236ce', 'hex');\nVECTOR = Buffer.from('d158e282d71af2c636ea7da5303a256e', 'hex');\n\nconst initElements = () => ({\n    form: document.querySelector('#form'),\n    input: document.querySelector('#inputText'),\n    output: document.querySelector('#outputText'),\n    options: document.querySelectorAll('[name=option]'),\n    processBtn: document.querySelector('#processBtn')\n})\n\nconst encrypt = () => {\n    const Elements = initElements();\n    const text = Elements.input.value;\n    const options = {\n        key: KEY,\n        process: 'encrypt',\n        algorithm: 'aes-256-gcm',\n        vector: VECTOR\n    }\n    const aes = new AES(text, options);\n    const encrypted = aes.getProcessedText();\n    Elements.output.value = encrypted;\n};\n\nconst decrypt = () => {\n    const Elements = initElements();\n    const text = Elements.input.value;\n    const options = {\n        key: KEY,\n        process: 'decrypt',\n        algorithm: 'aes-256-gcm',\n        vector: VECTOR\n    }\n    const aes = new AES(text, options);\n    const decrypted = aes.getProcessedText();\n    Elements.output.value = decrypted;\n};\n\n\nconst main = () => {\n    window.addEventListener('load', () => {\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n            const Elements = initElements();\n            if (Elements.options[0].checked)\n                encrypt();\n            else if (Elements.options[1].checked)\n                decrypt();\n        });\n    })\n}\n\nmain();"],"names":["$51861dfc7ca9d588$export$a143d493d941bafc","$eeb0961446aae8e3$export$d622b2ad8d90c771","$eeb0961446aae8e3$export$6100ba28696e12de","b64","tmp","i","lens","$eeb0961446aae8e3$var$getLens","validLen","placeHoldersLen","arr","$eeb0961446aae8e3$var$Arr","$eeb0961446aae8e3$var$_byteLength","curByte","len","$eeb0961446aae8e3$var$revLookup","charCodeAt","uint8","length","extraBytes","parts","maxChunkLength","len2","push","$eeb0961446aae8e3$var$encodeChunk","$eeb0961446aae8e3$var$lookup","join","$7221566bd4d49f44$export$aafa59e2e03f2942","$7221566bd4d49f44$export$68d8715fc104d294","Uint8Array","Array","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","Error","indexOf","start","end","num","output","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","$51861dfc7ca9d588$var$customInspectSymbol","Symbol","$51861dfc7ca9d588$var$Buffer","$51861dfc7ca9d588$var$createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","$51861dfc7ca9d588$var$allocUnsafe","$51861dfc7ca9d588$var$from","string","encoding","isEncoding","$51861dfc7ca9d588$var$byteLength","actual","write","slice","$51861dfc7ca9d588$var$fromString","ArrayBuffer","isView","arrayView","$51861dfc7ca9d588$var$isInstance","copy","$51861dfc7ca9d588$var$fromArrayBuffer","byteOffset","byteLength","$51861dfc7ca9d588$var$fromArrayLike","$51861dfc7ca9d588$var$fromArrayView","SharedArrayBuffer","valueOf","from","b","obj","isBuffer","$51861dfc7ca9d588$var$checked","undefined","$51861dfc7ca9d588$var$numberIsNaN","type","isArray","data","$51861dfc7ca9d588$var$fromObject","toPrimitive","$51861dfc7ca9d588$var$assertSize","size","array","toString","mustMatch","arguments","loweredCase","$51861dfc7ca9d588$var$utf8ToBytes","$51861dfc7ca9d588$var$base64ToBytes","toLowerCase","$51861dfc7ca9d588$var$slowToString","this","$51861dfc7ca9d588$var$hexSlice","$51861dfc7ca9d588$var$utf8Slice","$51861dfc7ca9d588$var$asciiSlice","$51861dfc7ca9d588$var$latin1Slice","$51861dfc7ca9d588$var$base64Slice","$51861dfc7ca9d588$var$utf16leSlice","$51861dfc7ca9d588$var$swap","n","$51861dfc7ca9d588$var$bidirectionalIndexOf","val","dir","$51861dfc7ca9d588$var$arrayIndexOf","call","lastIndexOf","i1","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","$51861dfc7ca9d588$var$hexWrite","Number","remaining","strLen","parsed","parseInt","substr","$51861dfc7ca9d588$var$utf8Write","$51861dfc7ca9d588$var$blitBuffer","$51861dfc7ca9d588$var$asciiWrite","str","byteArray","$51861dfc7ca9d588$var$asciiToBytes","$51861dfc7ca9d588$var$base64Write","$51861dfc7ca9d588$var$ucs2Write","units","hi","lo","$51861dfc7ca9d588$var$utf16leToBytes","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","fromCharCode","apply","$51861dfc7ca9d588$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$51861dfc7ca9d588$var$typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","$51861dfc7ca9d588$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$51861dfc7ca9d588$var$hexSliceLookupTable","bytes","$51861dfc7ca9d588$var$checkOffset","ext","$51861dfc7ca9d588$var$checkInt","max","$51861dfc7ca9d588$var$wrtBigUInt64LE","$51861dfc7ca9d588$var$checkIntBI","BigInt","$51861dfc7ca9d588$var$wrtBigUInt64BE","$51861dfc7ca9d588$var$checkIEEE754","$51861dfc7ca9d588$var$writeFloat","littleEndian","noAssert","$51861dfc7ca9d588$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$51861dfc7ca9d588$var$defineBigIntMethod","$51861dfc7ca9d588$var$validateNumber","first","last","$51861dfc7ca9d588$var$boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$51861dfc7ca9d588$var$errors","$51861dfc7ca9d588$var$E","sym","getMessage","Base","super","writable","configurable","name","stack","message","$51861dfc7ca9d588$var$addNumericalSeparator","range","ERR_OUT_OF_RANGE","$51861dfc7ca9d588$var$checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","$51861dfc7ca9d588$var$INVALID_BASE64_RE","leadSurrogate","split","$51861dfc7ca9d588$var$base64clean","src","dst","constructor","alphabet","table","i16","fn","$51861dfc7ca9d588$var$BufferBigIntNotDefined","$1b8da20507600032$var$AES","plainText","options","key","crypto","randomBytes","process","algorithm","vector","$1b8da20507600032$require$Buffer","encrypt","decrypt","processedText","cipher","createCipheriv","encrypted","update","final","decipher","decrypted","getPlainText","getProcessedText","$1b8da20507600032$var$KEY","VECTOR","$1b8da20507600032$var$initElements","form","document","querySelector","querySelectorAll","processBtn","window","addEventListener","preventDefault","Elements","checked","text","$1b8da20507600032$var$encrypt","$1b8da20507600032$var$decrypt"],"version":3,"file":"index.be99430b.js.map"}